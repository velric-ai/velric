"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/missions/[id]";
exports.ids = ["pages/api/missions/[id]"];
exports.modules = {

/***/ "(api-node)/./data/mockMissions.ts":
/*!******************************!*\
  !*** ./data/mockMissions.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MockDataStore: () => (/* binding */ MockDataStore),\n/* harmony export */   mockIndustryTags: () => (/* binding */ mockIndustryTags),\n/* harmony export */   mockMissionTemplates: () => (/* binding */ mockMissionTemplates),\n/* harmony export */   mockProjectDocs: () => (/* binding */ mockProjectDocs),\n/* harmony export */   mockProjects: () => (/* binding */ mockProjects),\n/* harmony export */   mockTargetRoles: () => (/* binding */ mockTargetRoles),\n/* harmony export */   mockUserMissions: () => (/* binding */ mockUserMissions),\n/* harmony export */   mockUsers: () => (/* binding */ mockUsers)\n/* harmony export */ });\n// data/mockMissions.ts\nconst mockMissionTemplates = [\n    {\n        id: 'ai-system-design',\n        title: 'AI System Design',\n        description: 'Tackle real-world architecture problems using LLMs and scalable solutions. Design and implement AI systems that can handle complex data processing and decision-making tasks.',\n        skills: [\n            'Python',\n            'System Design',\n            'LLMs',\n            'Architecture',\n            'Redis',\n            'Docker'\n        ],\n        industries: [\n            'Technology',\n            'E-commerce',\n            'Media'\n        ],\n        difficulty: 'Advanced',\n        time_estimate: '4-6 hours',\n        category: 'AI/ML',\n        tags: [\n            'System Design',\n            'AI',\n            'Backend'\n        ],\n        timeLimit: '7 days',\n        submissions: 243,\n        details: {\n            overview: 'This mission challenges you to design and architect an AI system capable of processing large volumes of data and making intelligent decisions. You\\'ll work with modern AI frameworks and learn how to build scalable, production-ready systems.',\n            requirements: [\n                'Design a scalable AI system architecture',\n                'Implement data processing pipelines',\n                'Create decision-making algorithms',\n                'Document your system design choices',\n                'Include performance considerations'\n            ],\n            technologies: [\n                'Python',\n                'TensorFlow/PyTorch',\n                'Docker',\n                'Kubernetes',\n                'Cloud Services'\n            ],\n            learningOutcomes: [\n                'System architecture best practices',\n                'AI model deployment strategies',\n                'Scalability considerations',\n                'Performance optimization techniques'\n            ]\n        },\n        created_at: '2024-01-15T10:00:00Z',\n        updated_at: '2024-01-15T10:00:00Z'\n    },\n    {\n        id: 'nlp-processing',\n        title: 'Natural Language Processing',\n        description: 'Build models to process and understand human language effectively. Implement NLP solutions for text analysis, sentiment detection, and language understanding.',\n        skills: [\n            'NLP',\n            'Python',\n            'Machine Learning',\n            'Transformers',\n            'spaCy',\n            'PyTorch'\n        ],\n        industries: [\n            'Technology',\n            'Media',\n            'Customer Service'\n        ],\n        difficulty: 'Advanced',\n        time_estimate: '4-5 hours',\n        category: 'AI/ML',\n        tags: [\n            'NLP',\n            'Machine Learning',\n            'Python',\n            'AI'\n        ],\n        timeLimit: '10 days',\n        submissions: 187,\n        details: {\n            overview: 'Dive deep into natural language processing by building comprehensive models that can understand, analyze, and generate human language. This mission covers everything from basic text processing to advanced language models.',\n            requirements: [\n                'Implement text preprocessing pipelines',\n                'Build sentiment analysis models',\n                'Create named entity recognition systems',\n                'Develop language understanding capabilities',\n                'Deploy models for real-time processing'\n            ],\n            technologies: [\n                'Python',\n                'NLTK',\n                'spaCy',\n                'Transformers',\n                'TensorFlow/PyTorch'\n            ],\n            learningOutcomes: [\n                'Advanced NLP techniques',\n                'Model training and evaluation',\n                'Text preprocessing strategies',\n                'Language model fine-tuning'\n            ]\n        },\n        created_at: '2024-01-20T10:00:00Z',\n        updated_at: '2024-01-20T10:00:00Z'\n    },\n    {\n        id: 'security-auth',\n        title: 'Security & Authentication Implementation',\n        description: 'Build a comprehensive authentication system with JWT tokens, OAuth2 integration, and role-based access control. Implement security best practices including rate limiting, input validation, and secure session management.',\n        skills: [\n            'JWT',\n            'OAuth2',\n            'Security',\n            'Authentication',\n            'Node.js',\n            'Express'\n        ],\n        industries: [\n            'Technology',\n            'Finance',\n            'Healthcare'\n        ],\n        difficulty: 'Intermediate',\n        time_estimate: '3-4 hours',\n        category: 'Security',\n        tags: [\n            'Security',\n            'Authentication',\n            'Backend'\n        ],\n        timeLimit: '5 days',\n        submissions: 156,\n        details: {\n            overview: 'Master the fundamentals of web security by implementing a robust authentication and authorization system. Learn industry best practices for securing web applications and protecting user data.',\n            requirements: [\n                'Implement JWT-based authentication',\n                'Set up OAuth2 integration',\n                'Create role-based access control',\n                'Add rate limiting and input validation',\n                'Implement secure session management'\n            ],\n            technologies: [\n                'Node.js',\n                'Express',\n                'JWT',\n                'OAuth2',\n                'bcrypt'\n            ],\n            learningOutcomes: [\n                'Web security fundamentals',\n                'Authentication vs authorization',\n                'Token-based security',\n                'Security best practices'\n            ]\n        },\n        created_at: '2024-01-16T10:00:00Z',\n        updated_at: '2024-01-16T10:00:00Z'\n    },\n    {\n        id: 'frontend-performance',\n        title: 'Frontend Performance Optimization',\n        description: 'Identify and fix performance bottlenecks in a React application. Implement code splitting, lazy loading, memoization, and optimize bundle size. Use profiling tools to measure improvements.',\n        skills: [\n            'React',\n            'TypeScript',\n            'Performance',\n            'Webpack',\n            'Testing'\n        ],\n        industries: [\n            'Technology',\n            'E-commerce',\n            'Media'\n        ],\n        difficulty: 'Intermediate',\n        time_estimate: '2-3 hours',\n        category: 'Frontend',\n        tags: [\n            'React',\n            'Performance',\n            'Frontend'\n        ],\n        timeLimit: '4 days',\n        submissions: 298,\n        details: {\n            overview: 'Learn to identify and resolve performance issues in React applications. Master techniques for optimizing bundle size, reducing load times, and improving user experience.',\n            requirements: [\n                'Analyze application performance bottlenecks',\n                'Implement code splitting and lazy loading',\n                'Optimize React component rendering',\n                'Reduce bundle size and improve load times',\n                'Set up performance monitoring'\n            ],\n            technologies: [\n                'React',\n                'TypeScript',\n                'Webpack',\n                'React DevTools',\n                'Lighthouse'\n            ],\n            learningOutcomes: [\n                'Performance profiling techniques',\n                'React optimization strategies',\n                'Bundle analysis and optimization',\n                'User experience improvements'\n            ]\n        },\n        created_at: '2024-01-17T10:00:00Z',\n        updated_at: '2024-01-17T10:00:00Z'\n    },\n    {\n        id: 'data-pipeline',\n        title: 'Data Pipeline & Analytics',\n        description: 'Build an end-to-end data pipeline that ingests, processes, and visualizes large datasets. Implement ETL processes, data validation, and create interactive dashboards for business insights.',\n        skills: [\n            'Python',\n            'Pandas',\n            'SQL',\n            'Visualization',\n            'ETL',\n            'Apache Airflow'\n        ],\n        industries: [\n            'Technology',\n            'Finance',\n            'Retail'\n        ],\n        difficulty: 'Beginner',\n        time_estimate: '3-5 hours',\n        category: 'Data Science',\n        tags: [\n            'Data Science',\n            'Analytics',\n            'Python'\n        ],\n        timeLimit: '6 days',\n        submissions: 134,\n        details: {\n            overview: 'Build a complete data pipeline from ingestion to visualization. Learn how to process large datasets, ensure data quality, and create meaningful insights for business decisions.',\n            requirements: [\n                'Design and implement data ingestion pipeline',\n                'Create data transformation and cleaning processes',\n                'Build data validation and quality checks',\n                'Develop interactive dashboards',\n                'Implement automated reporting'\n            ],\n            technologies: [\n                'Python',\n                'Pandas',\n                'Apache Airflow',\n                'PostgreSQL',\n                'Plotly'\n            ],\n            learningOutcomes: [\n                'ETL pipeline design',\n                'Data quality management',\n                'Dashboard development',\n                'Business intelligence concepts'\n            ]\n        },\n        created_at: '2024-01-18T10:00:00Z',\n        updated_at: '2024-01-18T10:00:00Z'\n    },\n    {\n        id: 'cloud-infrastructure',\n        title: 'Cloud Infrastructure Automation',\n        description: 'Design and implement Infrastructure as Code using Terraform and Kubernetes. Set up CI/CD pipelines, monitoring, and auto-scaling for a production application deployment.',\n        skills: [\n            'Terraform',\n            'Kubernetes',\n            'AWS',\n            'Docker',\n            'CI/CD',\n            'Monitoring'\n        ],\n        industries: [\n            'Technology',\n            'Finance',\n            'Healthcare'\n        ],\n        difficulty: 'Advanced',\n        time_estimate: '5-7 hours',\n        category: 'DevOps',\n        tags: [\n            'DevOps',\n            'Cloud',\n            'Infrastructure'\n        ],\n        timeLimit: '8 days',\n        submissions: 89,\n        details: {\n            overview: 'Master modern DevOps practices by building automated infrastructure deployment and management systems. Learn to scale applications efficiently and maintain high availability.',\n            requirements: [\n                'Create Infrastructure as Code with Terraform',\n                'Set up Kubernetes cluster and deployments',\n                'Implement CI/CD pipelines',\n                'Configure monitoring and alerting',\n                'Set up auto-scaling and load balancing'\n            ],\n            technologies: [\n                'Terraform',\n                'Kubernetes',\n                'AWS',\n                'Docker',\n                'Jenkins',\n                'Prometheus'\n            ],\n            learningOutcomes: [\n                'Infrastructure as Code principles',\n                'Container orchestration',\n                'CI/CD best practices',\n                'Monitoring and observability'\n            ]\n        },\n        created_at: '2024-01-19T10:00:00Z',\n        updated_at: '2024-01-19T10:00:00Z'\n    }\n];\nconst mockUsers = [\n    {\n        id: 'user-1',\n        email: 'john.doe@example.com',\n        name: 'John Doe',\n        created_at: '2024-01-01T10:00:00Z',\n        updated_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'user-2',\n        email: 'jane.smith@example.com',\n        name: 'Jane Smith',\n        created_at: '2024-01-02T10:00:00Z',\n        updated_at: '2024-01-02T10:00:00Z'\n    }\n];\nconst mockUserMissions = [\n    {\n        id: 'um-1',\n        user_id: 'user-1',\n        mission_id: 'ai-system-design',\n        status: 'starred',\n        created_at: '2024-01-15T11:00:00Z',\n        updated_at: '2024-01-15T11:00:00Z'\n    },\n    {\n        id: 'um-2',\n        user_id: 'user-1',\n        mission_id: 'security-auth',\n        status: 'in_progress',\n        started_at: '2024-01-16T09:00:00Z',\n        created_at: '2024-01-16T09:00:00Z',\n        updated_at: '2024-01-16T09:00:00Z'\n    },\n    {\n        id: 'um-3',\n        user_id: 'user-1',\n        mission_id: 'frontend-performance',\n        status: 'completed',\n        started_at: '2024-01-17T09:00:00Z',\n        completed_at: '2024-01-17T14:00:00Z',\n        created_at: '2024-01-17T09:00:00Z',\n        updated_at: '2024-01-17T14:00:00Z'\n    },\n    {\n        id: 'um-4',\n        user_id: 'user-1',\n        mission_id: 'data-pipeline',\n        status: 'suggested',\n        created_at: '2024-01-18T10:00:00Z',\n        updated_at: '2024-01-18T10:00:00Z'\n    }\n];\nconst mockIndustryTags = [\n    {\n        id: 'it-1',\n        name: 'Technology',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-2',\n        name: 'Finance',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-3',\n        name: 'Healthcare',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-4',\n        name: 'E-commerce',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-5',\n        name: 'Media',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-6',\n        name: 'Retail',\n        created_at: '2024-01-01T10:00:00Z'\n    }\n];\nconst mockTargetRoles = [\n    {\n        id: 'tr-1',\n        name: 'Software Engineer',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-2',\n        name: 'Senior Software Engineer',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-3',\n        name: 'Full Stack Developer',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-4',\n        name: 'DevOps Engineer',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-5',\n        name: 'Data Scientist',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-6',\n        name: 'ML Engineer',\n        created_at: '2024-01-01T10:00:00Z'\n    }\n];\nconst mockProjects = [\n    {\n        id: 'proj-1',\n        title: 'E-commerce Recommendation System',\n        description: 'A machine learning-powered recommendation engine for an e-commerce platform',\n        user_id: 'user-1',\n        mission_id: 'ai-system-design',\n        status: 'in_progress',\n        created_at: '2024-01-15T12:00:00Z',\n        updated_at: '2024-01-15T12:00:00Z'\n    }\n];\nconst mockProjectDocs = [\n    {\n        id: 'pd-1',\n        project_id: 'proj-1',\n        title: 'Project Overview',\n        content: '# E-commerce Recommendation System\\n\\nThis project implements a scalable recommendation engine...',\n        doc_type: 'readme',\n        order_index: 1,\n        created_at: '2024-01-15T12:30:00Z',\n        updated_at: '2024-01-15T12:30:00Z'\n    },\n    {\n        id: 'pd-2',\n        project_id: 'proj-1',\n        title: 'Technical Specification',\n        content: '# Technical Specification\\n\\n## Architecture\\n\\nThe system consists of...',\n        doc_type: 'spec',\n        order_index: 2,\n        created_at: '2024-01-15T13:00:00Z',\n        updated_at: '2024-01-15T13:00:00Z'\n    }\n];\n// In-memory store for dummy mode\nclass MockDataStore {\n    constructor(){\n        this.missionTemplates = [\n            ...mockMissionTemplates\n        ];\n        this.userMissions = [\n            ...mockUserMissions\n        ];\n        this.users = [\n            ...mockUsers\n        ];\n        this.projects = [\n            ...mockProjects\n        ];\n        this.projectDocs = [\n            ...mockProjectDocs\n        ];\n        this.industryTags = [\n            ...mockIndustryTags\n        ];\n        this.targetRoles = [\n            ...mockTargetRoles\n        ];\n    }\n    static getInstance() {\n        if (!MockDataStore.instance) {\n            MockDataStore.instance = new MockDataStore();\n        }\n        return MockDataStore.instance;\n    }\n    reset() {\n        this.missionTemplates = [\n            ...mockMissionTemplates\n        ];\n        this.userMissions = [\n            ...mockUserMissions\n        ];\n        this.users = [\n            ...mockUsers\n        ];\n        this.projects = [\n            ...mockProjects\n        ];\n        this.projectDocs = [\n            ...mockProjectDocs\n        ];\n        this.industryTags = [\n            ...mockIndustryTags\n        ];\n        this.targetRoles = [\n            ...mockTargetRoles\n        ];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./data/mockMissions.ts\n");

/***/ }),

/***/ "(api-node)/./lib/supabaseClient.ts":
/*!*******************************!*\
  !*** ./lib/supabaseClient.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   USE_DUMMY: () => (/* binding */ USE_DUMMY),\n/* harmony export */   addGeneratedMissions: () => (/* binding */ addGeneratedMissions),\n/* harmony export */   createUserMission: () => (/* binding */ createUserMission),\n/* harmony export */   getMissionById: () => (/* binding */ getMissionById),\n/* harmony export */   getMissions: () => (/* binding */ getMissions),\n/* harmony export */   insertProjectWithRelations: () => (/* binding */ insertProjectWithRelations),\n/* harmony export */   updateUserMissionStatus: () => (/* binding */ updateUserMissionStatus)\n/* harmony export */ });\n/* harmony import */ var _data_mockMissions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data/mockMissions */ \"(api-node)/./data/mockMissions.ts\");\n// lib/supabaseClient.ts\n\n// Toggle between dummy data and real Supabase\nconst USE_DUMMY = true;\n// TODO: Set these environment variables when switching to real Supabase:\n// NEXT_PUBLIC_SUPABASE_URL=your_supabase_url\n// NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key\n// or SUPABASE_SERVICE_ROLE_KEY=your_service_role_key for server-side operations\nlet supabase = null;\nif (!USE_DUMMY) {\n// Uncomment and configure when ready to use real Supabase:\n// import { createClient } from '@supabase/supabase-js';\n// const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\n// const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n// supabase = createClient(supabaseUrl, supabaseKey);\n}\nconst mockStore = _data_mockMissions__WEBPACK_IMPORTED_MODULE_0__.MockDataStore.getInstance();\n// Mission Templates\nasync function getMissions(status) {\n    if (USE_DUMMY) {\n        // Simulate network delay\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        if (status) {\n            // Filter by status if provided (for user missions)\n            const userMissions = mockStore.userMissions.filter((um)=>um.status === status);\n            const missionIds = userMissions.map((um)=>um.mission_id);\n            return mockStore.missionTemplates.filter((mt)=>missionIds.includes(mt.id));\n        }\n        return mockStore.missionTemplates;\n    }\n    // Real Supabase implementation\n    const query = supabase.from('mission_templates').select('*');\n    if (status) {\n        // Join with user_missions table to filter by status\n        query.eq('user_missions.status', status);\n    }\n    const { data, error } = await query;\n    if (error) throw error;\n    return data || [];\n}\nasync function getMissionById(id) {\n    if (USE_DUMMY) {\n        console.log('getMissionById: Using dummy data, searching for ID:', id);\n        console.log('getMissionById: Available missions:', mockStore.missionTemplates.map((m)=>m.id));\n        await new Promise((resolve)=>setTimeout(resolve, 50));\n        const mission = mockStore.missionTemplates.find((mt)=>mt.id === id) || null;\n        console.log('getMissionById: Found mission:', mission ? mission.title : 'Not found');\n        return mission;\n    }\n    const { data, error } = await supabase.from('mission_templates').select('*').eq('id', id).single();\n    if (error) throw error;\n    return data;\n}\n// User Missions\nasync function createUserMission(userId, missionId, status = 'suggested') {\n    if (USE_DUMMY) {\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        const newUserMission = {\n            id: `um-${Date.now()}`,\n            user_id: userId,\n            mission_id: missionId,\n            status,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            ...status === 'in_progress' && {\n                started_at: new Date().toISOString()\n            },\n            ...status === 'completed' && {\n                completed_at: new Date().toISOString()\n            }\n        };\n        mockStore.userMissions.push(newUserMission);\n        return newUserMission;\n    }\n    const { data, error } = await supabase.from('user_missions').insert({\n        user_id: userId,\n        mission_id: missionId,\n        status,\n        ...status === 'in_progress' && {\n            started_at: new Date().toISOString()\n        },\n        ...status === 'completed' && {\n            completed_at: new Date().toISOString()\n        }\n    }).select().single();\n    if (error) throw error;\n    return data;\n}\nasync function updateUserMissionStatus(userId, missionId, action) {\n    const statusMap = {\n        star: 'starred',\n        start: 'in_progress',\n        submit: 'submitted',\n        complete: 'completed'\n    };\n    const newStatus = statusMap[action];\n    if (USE_DUMMY) {\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        let userMission = mockStore.userMissions.find((um)=>um.user_id === userId && um.mission_id === missionId);\n        if (!userMission) {\n            // Create new user mission if it doesn't exist\n            userMission = await createUserMission(userId, missionId, newStatus);\n        } else {\n            // Update existing user mission\n            userMission.status = newStatus;\n            userMission.updated_at = new Date().toISOString();\n            if (action === 'start') {\n                userMission.started_at = new Date().toISOString();\n            } else if (action === 'submit') {\n                userMission.submitted_at = new Date().toISOString();\n            } else if (action === 'complete') {\n                userMission.completed_at = new Date().toISOString();\n            }\n        }\n        return userMission;\n    }\n    // Check if user mission exists\n    const { data: existing } = await supabase.from('user_missions').select('*').eq('user_id', userId).eq('mission_id', missionId).single();\n    if (!existing) {\n        // Create new user mission\n        return await createUserMission(userId, missionId, newStatus);\n    }\n    // Update existing user mission\n    const updateData = {\n        status: newStatus,\n        updated_at: new Date().toISOString()\n    };\n    if (action === 'start') {\n        updateData.started_at = new Date().toISOString();\n    } else if (action === 'submit') {\n        updateData.submitted_at = new Date().toISOString();\n    } else if (action === 'complete') {\n        updateData.completed_at = new Date().toISOString();\n    }\n    const { data, error } = await supabase.from('user_missions').update(updateData).eq('user_id', userId).eq('mission_id', missionId).select().single();\n    if (error) throw error;\n    return data;\n}\n// Projects\nasync function insertProjectWithRelations(project, docs, industryTagIds, targetRoleIds) {\n    if (USE_DUMMY) {\n        await new Promise((resolve)=>setTimeout(resolve, 150));\n        const newProject = {\n            ...project,\n            id: `proj-${Date.now()}`,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        };\n        mockStore.projects.push(newProject);\n        // Add project docs if provided\n        if (docs) {\n            docs.forEach((doc, index)=>{\n                const newDoc = {\n                    ...doc,\n                    id: `pd-${Date.now()}-${index}`,\n                    project_id: newProject.id,\n                    created_at: new Date().toISOString(),\n                    updated_at: new Date().toISOString()\n                };\n                mockStore.projectDocs.push(newDoc);\n            });\n        }\n        return newProject;\n    }\n    // Real Supabase implementation would use transactions\n    const { data: projectData, error: projectError } = await supabase.from('projects').insert(project).select().single();\n    if (projectError) throw projectError;\n    // Insert related data...\n    // (Implementation would continue with docs, tags, roles)\n    return projectData;\n}\n// Add new missions to the store (for AI generation)\nasync function addGeneratedMissions(missions) {\n    if (USE_DUMMY) {\n        await new Promise((resolve)=>setTimeout(resolve, 50));\n        mockStore.missionTemplates.push(...missions);\n        return;\n    }\n    const { error } = await supabase.from('mission_templates').insert(missions);\n    if (error) throw error;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/supabaseClient.ts\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmissions%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmissions%5C%5Bid%5D.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmissions%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmissions%5C%5Bid%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_missions_id_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\missions\\[id].ts */ \"(api-node)/./pages/api/missions/[id].ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_missions_id_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_missions_id_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/missions/[id]\",\n        pathname: \"/api/missions/[id]\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_missions_id_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/missions/[id]\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/missions/[id]\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmissions%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmissions%5C%5Bid%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/missions/[id].ts":
/*!************************************!*\
  !*** ./pages/api/missions/[id].ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabaseClient */ \"(api-node)/./lib/supabaseClient.ts\");\n// pages/api/missions/[id].ts\n\nasync function handler(req, res) {\n    if (req.method !== 'GET') {\n        return res.status(405).json({\n            success: false,\n            error: 'Method not allowed'\n        });\n    }\n    try {\n        const { id } = req.query;\n        console.log('API: Fetching mission with ID:', id);\n        if (typeof id !== 'string') {\n            console.log('API: Invalid ID type:', typeof id);\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid mission ID'\n            });\n        }\n        console.log('API: Calling getMissionById...');\n        const mission = await (0,_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.getMissionById)(id);\n        console.log('API: Mission result:', mission ? 'Found' : 'Not found');\n        if (!mission) {\n            return res.status(404).json({\n                success: false,\n                error: 'Mission not found'\n            });\n        }\n        res.status(200).json({\n            success: true,\n            mission\n        });\n    } catch (error) {\n        console.error('Error fetching mission:', error);\n        res.status(500).json({\n            success: false,\n            error: 'Failed to fetch mission'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9taXNzaW9ucy9baWRdLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsNkJBQTZCO0FBRXlCO0FBU3ZDLGVBQWVDLFFBQzVCQyxHQUFtQixFQUNuQkMsR0FBaUM7SUFFakMsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLE9BQU87UUFDeEIsT0FBT0QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQkMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7SUFDRjtJQUVBLElBQUk7UUFDRixNQUFNLEVBQUVDLEVBQUUsRUFBRSxHQUFHUCxJQUFJUSxLQUFLO1FBQ3hCQyxRQUFRQyxHQUFHLENBQUMsa0NBQWtDSDtRQUU5QyxJQUFJLE9BQU9BLE9BQU8sVUFBVTtZQUMxQkUsUUFBUUMsR0FBRyxDQUFDLHlCQUF5QixPQUFPSDtZQUM1QyxPQUFPTixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUMxQkMsU0FBUztnQkFDVEMsT0FBTztZQUNUO1FBQ0Y7UUFFQUcsUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTUMsVUFBVSxNQUFNYixtRUFBY0EsQ0FBQ1M7UUFDckNFLFFBQVFDLEdBQUcsQ0FBQyx3QkFBd0JDLFVBQVUsVUFBVTtRQUV4RCxJQUFJLENBQUNBLFNBQVM7WUFDWixPQUFPVixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUMxQkMsU0FBUztnQkFDVEMsT0FBTztZQUNUO1FBQ0Y7UUFFQUwsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUNuQkMsU0FBUztZQUNUTTtRQUNGO0lBQ0YsRUFBRSxPQUFPTCxPQUFPO1FBQ2RHLFFBQVFILEtBQUssQ0FBQywyQkFBMkJBO1FBQ3pDTCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWlyc2FcXE9uZURyaXZlXFxEZXNrdG9wXFxWZWxyaWMgVGFza3NcXHZlbHJpY1xccGFnZXNcXGFwaVxcbWlzc2lvbnNcXFtpZF0udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFnZXMvYXBpL21pc3Npb25zL1tpZF0udHNcclxuaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xyXG5pbXBvcnQgeyBnZXRNaXNzaW9uQnlJZCB9IGZyb20gJ0AvbGliL3N1cGFiYXNlQ2xpZW50JztcclxuaW1wb3J0IHsgTWlzc2lvblRlbXBsYXRlIH0gZnJvbSAnQC90eXBlcyc7XHJcblxyXG5pbnRlcmZhY2UgQXBpUmVzcG9uc2Uge1xyXG4gIG1pc3Npb24/OiBNaXNzaW9uVGVtcGxhdGU7XHJcbiAgZXJyb3I/OiBzdHJpbmc7XHJcbiAgc3VjY2VzczogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihcclxuICByZXE6IE5leHRBcGlSZXF1ZXN0LFxyXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlPEFwaVJlc3BvbnNlPlxyXG4pIHtcclxuICBpZiAocmVxLm1ldGhvZCAhPT0gJ0dFVCcpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICBlcnJvcjogJ01ldGhvZCBub3QgYWxsb3dlZCdcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5xdWVyeTtcclxuICAgIGNvbnNvbGUubG9nKCdBUEk6IEZldGNoaW5nIG1pc3Npb24gd2l0aCBJRDonLCBpZCk7XHJcbiAgICBcclxuICAgIGlmICh0eXBlb2YgaWQgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdBUEk6IEludmFsaWQgSUQgdHlwZTonLCB0eXBlb2YgaWQpO1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiAnSW52YWxpZCBtaXNzaW9uIElEJ1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coJ0FQSTogQ2FsbGluZyBnZXRNaXNzaW9uQnlJZC4uLicpO1xyXG4gICAgY29uc3QgbWlzc2lvbiA9IGF3YWl0IGdldE1pc3Npb25CeUlkKGlkKTtcclxuICAgIGNvbnNvbGUubG9nKCdBUEk6IE1pc3Npb24gcmVzdWx0OicsIG1pc3Npb24gPyAnRm91bmQnIDogJ05vdCBmb3VuZCcpO1xyXG4gICAgXHJcbiAgICBpZiAoIW1pc3Npb24pIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogJ01pc3Npb24gbm90IGZvdW5kJ1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBtaXNzaW9uXHJcbiAgICB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgbWlzc2lvbjonLCBlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBtaXNzaW9uJ1xyXG4gICAgfSk7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbImdldE1pc3Npb25CeUlkIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJpZCIsInF1ZXJ5IiwiY29uc29sZSIsImxvZyIsIm1pc3Npb24iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/missions/[id].ts\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmissions%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmissions%5C%5Bid%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();