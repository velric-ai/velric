"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/generate_missions";
exports.ids = ["pages/api/generate_missions"];
exports.modules = {

/***/ "(api-node)/./data/mockMissions.ts":
/*!******************************!*\
  !*** ./data/mockMissions.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MockDataStore: () => (/* binding */ MockDataStore),\n/* harmony export */   mockIndustryTags: () => (/* binding */ mockIndustryTags),\n/* harmony export */   mockMissionTemplates: () => (/* binding */ mockMissionTemplates),\n/* harmony export */   mockProjectDocs: () => (/* binding */ mockProjectDocs),\n/* harmony export */   mockProjects: () => (/* binding */ mockProjects),\n/* harmony export */   mockTargetRoles: () => (/* binding */ mockTargetRoles),\n/* harmony export */   mockUserMissions: () => (/* binding */ mockUserMissions),\n/* harmony export */   mockUsers: () => (/* binding */ mockUsers)\n/* harmony export */ });\n// data/mockMissions.ts\nconst mockMissionTemplates = [\n    {\n        id: 'ai-system-design',\n        title: 'AI System Design',\n        description: 'Tackle real-world architecture problems using LLMs and scalable solutions. Design and implement AI systems that can handle complex data processing and decision-making tasks.',\n        skills: [\n            'Python',\n            'System Design',\n            'LLMs',\n            'Architecture',\n            'Redis',\n            'Docker'\n        ],\n        industries: [\n            'Technology',\n            'E-commerce',\n            'Media'\n        ],\n        difficulty: 'Advanced',\n        time_estimate: '4-6 hours',\n        category: 'AI/ML',\n        tags: [\n            'System Design',\n            'AI',\n            'Backend'\n        ],\n        timeLimit: '7 days',\n        submissions: 243,\n        details: {\n            overview: 'This mission challenges you to design and architect an AI system capable of processing large volumes of data and making intelligent decisions. You\\'ll work with modern AI frameworks and learn how to build scalable, production-ready systems.',\n            requirements: [\n                'Design a scalable AI system architecture',\n                'Implement data processing pipelines',\n                'Create decision-making algorithms',\n                'Document your system design choices',\n                'Include performance considerations'\n            ],\n            technologies: [\n                'Python',\n                'TensorFlow/PyTorch',\n                'Docker',\n                'Kubernetes',\n                'Cloud Services'\n            ],\n            learningOutcomes: [\n                'System architecture best practices',\n                'AI model deployment strategies',\n                'Scalability considerations',\n                'Performance optimization techniques'\n            ]\n        },\n        created_at: '2024-01-15T10:00:00Z',\n        updated_at: '2024-01-15T10:00:00Z'\n    },\n    {\n        id: 'nlp-processing',\n        title: 'Natural Language Processing',\n        description: 'Build models to process and understand human language effectively. Implement NLP solutions for text analysis, sentiment detection, and language understanding.',\n        skills: [\n            'NLP',\n            'Python',\n            'Machine Learning',\n            'Transformers',\n            'spaCy',\n            'PyTorch'\n        ],\n        industries: [\n            'Technology',\n            'Media',\n            'Customer Service'\n        ],\n        difficulty: 'Advanced',\n        time_estimate: '4-5 hours',\n        category: 'AI/ML',\n        tags: [\n            'NLP',\n            'Machine Learning',\n            'Python',\n            'AI'\n        ],\n        timeLimit: '10 days',\n        submissions: 187,\n        details: {\n            overview: 'Dive deep into natural language processing by building comprehensive models that can understand, analyze, and generate human language. This mission covers everything from basic text processing to advanced language models.',\n            requirements: [\n                'Implement text preprocessing pipelines',\n                'Build sentiment analysis models',\n                'Create named entity recognition systems',\n                'Develop language understanding capabilities',\n                'Deploy models for real-time processing'\n            ],\n            technologies: [\n                'Python',\n                'NLTK',\n                'spaCy',\n                'Transformers',\n                'TensorFlow/PyTorch'\n            ],\n            learningOutcomes: [\n                'Advanced NLP techniques',\n                'Model training and evaluation',\n                'Text preprocessing strategies',\n                'Language model fine-tuning'\n            ]\n        },\n        created_at: '2024-01-20T10:00:00Z',\n        updated_at: '2024-01-20T10:00:00Z'\n    },\n    {\n        id: 'security-auth',\n        title: 'Security & Authentication Implementation',\n        description: 'Build a comprehensive authentication system with JWT tokens, OAuth2 integration, and role-based access control. Implement security best practices including rate limiting, input validation, and secure session management.',\n        skills: [\n            'JWT',\n            'OAuth2',\n            'Security',\n            'Authentication',\n            'Node.js',\n            'Express'\n        ],\n        industries: [\n            'Technology',\n            'Finance',\n            'Healthcare'\n        ],\n        difficulty: 'Intermediate',\n        time_estimate: '3-4 hours',\n        category: 'Security',\n        tags: [\n            'Security',\n            'Authentication',\n            'Backend'\n        ],\n        timeLimit: '5 days',\n        submissions: 156,\n        details: {\n            overview: 'Master the fundamentals of web security by implementing a robust authentication and authorization system. Learn industry best practices for securing web applications and protecting user data.',\n            requirements: [\n                'Implement JWT-based authentication',\n                'Set up OAuth2 integration',\n                'Create role-based access control',\n                'Add rate limiting and input validation',\n                'Implement secure session management'\n            ],\n            technologies: [\n                'Node.js',\n                'Express',\n                'JWT',\n                'OAuth2',\n                'bcrypt'\n            ],\n            learningOutcomes: [\n                'Web security fundamentals',\n                'Authentication vs authorization',\n                'Token-based security',\n                'Security best practices'\n            ]\n        },\n        created_at: '2024-01-16T10:00:00Z',\n        updated_at: '2024-01-16T10:00:00Z'\n    },\n    {\n        id: 'frontend-performance',\n        title: 'Frontend Performance Optimization',\n        description: 'Identify and fix performance bottlenecks in a React application. Implement code splitting, lazy loading, memoization, and optimize bundle size. Use profiling tools to measure improvements.',\n        skills: [\n            'React',\n            'TypeScript',\n            'Performance',\n            'Webpack',\n            'Testing'\n        ],\n        industries: [\n            'Technology',\n            'E-commerce',\n            'Media'\n        ],\n        difficulty: 'Intermediate',\n        time_estimate: '2-3 hours',\n        category: 'Frontend',\n        tags: [\n            'React',\n            'Performance',\n            'Frontend'\n        ],\n        timeLimit: '4 days',\n        submissions: 298,\n        details: {\n            overview: 'Learn to identify and resolve performance issues in React applications. Master techniques for optimizing bundle size, reducing load times, and improving user experience.',\n            requirements: [\n                'Analyze application performance bottlenecks',\n                'Implement code splitting and lazy loading',\n                'Optimize React component rendering',\n                'Reduce bundle size and improve load times',\n                'Set up performance monitoring'\n            ],\n            technologies: [\n                'React',\n                'TypeScript',\n                'Webpack',\n                'React DevTools',\n                'Lighthouse'\n            ],\n            learningOutcomes: [\n                'Performance profiling techniques',\n                'React optimization strategies',\n                'Bundle analysis and optimization',\n                'User experience improvements'\n            ]\n        },\n        created_at: '2024-01-17T10:00:00Z',\n        updated_at: '2024-01-17T10:00:00Z'\n    },\n    {\n        id: 'data-pipeline',\n        title: 'Data Pipeline & Analytics',\n        description: 'Build an end-to-end data pipeline that ingests, processes, and visualizes large datasets. Implement ETL processes, data validation, and create interactive dashboards for business insights.',\n        skills: [\n            'Python',\n            'Pandas',\n            'SQL',\n            'Visualization',\n            'ETL',\n            'Apache Airflow'\n        ],\n        industries: [\n            'Technology',\n            'Finance',\n            'Retail'\n        ],\n        difficulty: 'Beginner',\n        time_estimate: '3-5 hours',\n        category: 'Data Science',\n        tags: [\n            'Data Science',\n            'Analytics',\n            'Python'\n        ],\n        timeLimit: '6 days',\n        submissions: 134,\n        details: {\n            overview: 'Build a complete data pipeline from ingestion to visualization. Learn how to process large datasets, ensure data quality, and create meaningful insights for business decisions.',\n            requirements: [\n                'Design and implement data ingestion pipeline',\n                'Create data transformation and cleaning processes',\n                'Build data validation and quality checks',\n                'Develop interactive dashboards',\n                'Implement automated reporting'\n            ],\n            technologies: [\n                'Python',\n                'Pandas',\n                'Apache Airflow',\n                'PostgreSQL',\n                'Plotly'\n            ],\n            learningOutcomes: [\n                'ETL pipeline design',\n                'Data quality management',\n                'Dashboard development',\n                'Business intelligence concepts'\n            ]\n        },\n        created_at: '2024-01-18T10:00:00Z',\n        updated_at: '2024-01-18T10:00:00Z'\n    },\n    {\n        id: 'cloud-infrastructure',\n        title: 'Cloud Infrastructure Automation',\n        description: 'Design and implement Infrastructure as Code using Terraform and Kubernetes. Set up CI/CD pipelines, monitoring, and auto-scaling for a production application deployment.',\n        skills: [\n            'Terraform',\n            'Kubernetes',\n            'AWS',\n            'Docker',\n            'CI/CD',\n            'Monitoring'\n        ],\n        industries: [\n            'Technology',\n            'Finance',\n            'Healthcare'\n        ],\n        difficulty: 'Advanced',\n        time_estimate: '5-7 hours',\n        category: 'DevOps',\n        tags: [\n            'DevOps',\n            'Cloud',\n            'Infrastructure'\n        ],\n        timeLimit: '8 days',\n        submissions: 89,\n        details: {\n            overview: 'Master modern DevOps practices by building automated infrastructure deployment and management systems. Learn to scale applications efficiently and maintain high availability.',\n            requirements: [\n                'Create Infrastructure as Code with Terraform',\n                'Set up Kubernetes cluster and deployments',\n                'Implement CI/CD pipelines',\n                'Configure monitoring and alerting',\n                'Set up auto-scaling and load balancing'\n            ],\n            technologies: [\n                'Terraform',\n                'Kubernetes',\n                'AWS',\n                'Docker',\n                'Jenkins',\n                'Prometheus'\n            ],\n            learningOutcomes: [\n                'Infrastructure as Code principles',\n                'Container orchestration',\n                'CI/CD best practices',\n                'Monitoring and observability'\n            ]\n        },\n        created_at: '2024-01-19T10:00:00Z',\n        updated_at: '2024-01-19T10:00:00Z'\n    }\n];\nconst mockUsers = [\n    {\n        id: 'user-1',\n        email: 'john.doe@example.com',\n        name: 'John Doe',\n        created_at: '2024-01-01T10:00:00Z',\n        updated_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'user-2',\n        email: 'jane.smith@example.com',\n        name: 'Jane Smith',\n        created_at: '2024-01-02T10:00:00Z',\n        updated_at: '2024-01-02T10:00:00Z'\n    }\n];\nconst mockUserMissions = [\n    {\n        id: 'um-1',\n        user_id: 'user-1',\n        mission_id: 'ai-system-design',\n        status: 'starred',\n        created_at: '2024-01-15T11:00:00Z',\n        updated_at: '2024-01-15T11:00:00Z'\n    },\n    {\n        id: 'um-2',\n        user_id: 'user-1',\n        mission_id: 'security-auth',\n        status: 'in_progress',\n        started_at: '2024-01-16T09:00:00Z',\n        created_at: '2024-01-16T09:00:00Z',\n        updated_at: '2024-01-16T09:00:00Z'\n    },\n    {\n        id: 'um-3',\n        user_id: 'user-1',\n        mission_id: 'frontend-performance',\n        status: 'completed',\n        started_at: '2024-01-17T09:00:00Z',\n        completed_at: '2024-01-17T14:00:00Z',\n        created_at: '2024-01-17T09:00:00Z',\n        updated_at: '2024-01-17T14:00:00Z'\n    },\n    {\n        id: 'um-4',\n        user_id: 'user-1',\n        mission_id: 'data-pipeline',\n        status: 'suggested',\n        created_at: '2024-01-18T10:00:00Z',\n        updated_at: '2024-01-18T10:00:00Z'\n    }\n];\nconst mockIndustryTags = [\n    {\n        id: 'it-1',\n        name: 'Technology',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-2',\n        name: 'Finance',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-3',\n        name: 'Healthcare',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-4',\n        name: 'E-commerce',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-5',\n        name: 'Media',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'it-6',\n        name: 'Retail',\n        created_at: '2024-01-01T10:00:00Z'\n    }\n];\nconst mockTargetRoles = [\n    {\n        id: 'tr-1',\n        name: 'Software Engineer',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-2',\n        name: 'Senior Software Engineer',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-3',\n        name: 'Full Stack Developer',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-4',\n        name: 'DevOps Engineer',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-5',\n        name: 'Data Scientist',\n        created_at: '2024-01-01T10:00:00Z'\n    },\n    {\n        id: 'tr-6',\n        name: 'ML Engineer',\n        created_at: '2024-01-01T10:00:00Z'\n    }\n];\nconst mockProjects = [\n    {\n        id: 'proj-1',\n        title: 'E-commerce Recommendation System',\n        description: 'A machine learning-powered recommendation engine for an e-commerce platform',\n        user_id: 'user-1',\n        mission_id: 'ai-system-design',\n        status: 'in_progress',\n        created_at: '2024-01-15T12:00:00Z',\n        updated_at: '2024-01-15T12:00:00Z'\n    }\n];\nconst mockProjectDocs = [\n    {\n        id: 'pd-1',\n        project_id: 'proj-1',\n        title: 'Project Overview',\n        content: '# E-commerce Recommendation System\\n\\nThis project implements a scalable recommendation engine...',\n        doc_type: 'readme',\n        order_index: 1,\n        created_at: '2024-01-15T12:30:00Z',\n        updated_at: '2024-01-15T12:30:00Z'\n    },\n    {\n        id: 'pd-2',\n        project_id: 'proj-1',\n        title: 'Technical Specification',\n        content: '# Technical Specification\\n\\n## Architecture\\n\\nThe system consists of...',\n        doc_type: 'spec',\n        order_index: 2,\n        created_at: '2024-01-15T13:00:00Z',\n        updated_at: '2024-01-15T13:00:00Z'\n    }\n];\n// In-memory store for dummy mode\nclass MockDataStore {\n    constructor(){\n        this.missionTemplates = [\n            ...mockMissionTemplates\n        ];\n        this.userMissions = [\n            ...mockUserMissions\n        ];\n        this.users = [\n            ...mockUsers\n        ];\n        this.projects = [\n            ...mockProjects\n        ];\n        this.projectDocs = [\n            ...mockProjectDocs\n        ];\n        this.industryTags = [\n            ...mockIndustryTags\n        ];\n        this.targetRoles = [\n            ...mockTargetRoles\n        ];\n    }\n    static getInstance() {\n        if (!MockDataStore.instance) {\n            MockDataStore.instance = new MockDataStore();\n        }\n        return MockDataStore.instance;\n    }\n    reset() {\n        this.missionTemplates = [\n            ...mockMissionTemplates\n        ];\n        this.userMissions = [\n            ...mockUserMissions\n        ];\n        this.users = [\n            ...mockUsers\n        ];\n        this.projects = [\n            ...mockProjects\n        ];\n        this.projectDocs = [\n            ...mockProjectDocs\n        ];\n        this.industryTags = [\n            ...mockIndustryTags\n        ];\n        this.targetRoles = [\n            ...mockTargetRoles\n        ];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./data/mockMissions.ts\n");

/***/ }),

/***/ "(api-node)/./lib/ai.ts":
/*!*******************!*\
  !*** ./lib/ai.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MISSION_GENERATION_PROMPT: () => (/* binding */ MISSION_GENERATION_PROMPT),\n/* harmony export */   generateMissionsFromResume: () => (/* binding */ generateMissionsFromResume)\n/* harmony export */ });\n// lib/ai.ts\n// Production-ready prompt template for AI mission generation\nconst MISSION_GENERATION_PROMPT = `\nYou are an expert career coach and technical mentor. Generate personalized coding missions based on the user's background and interests.\n\nCONTEXT:\n- Resume/Background: {resumeText}\n- Interests: {interests}\n- Industry Focus: {industry}\n- Difficulty Level: {difficulty}\n- Time Estimate: {timeEstimate}\n\nREQUIREMENTS:\n1. Generate 3-5 unique, practical coding missions\n2. Each mission should be based on real-world scenarios from top companies\n3. Missions should progressively build skills relevant to the user's interests\n4. Include specific technologies and frameworks mentioned in the resume\n5. Ensure missions are achievable within the specified time frame\n\nOUTPUT FORMAT (JSON):\n{\n  \"missions\": [\n    {\n      \"id\": \"generated-{timestamp}-{index}\",\n      \"title\": \"Clear, engaging mission title\",\n      \"description\": \"Detailed description (2-3 sentences) explaining what the user will build and learn\",\n      \"skills\": [\"skill1\", \"skill2\", \"skill3\"],\n      \"industries\": [\"industry1\", \"industry2\"],\n      \"difficulty\": \"Beginner|Intermediate|Advanced\",\n      \"time_estimate\": \"X-Y hours\"\n    }\n  ]\n}\n\nGUIDELINES:\n- Make titles action-oriented and specific\n- Descriptions should explain both the technical challenge and business context\n- Skills should include 4-6 relevant technologies\n- Industries should reflect where this type of work is common\n- Difficulty should match the user's experience level\n- Time estimates should be realistic for the complexity\n\nGenerate missions that feel like real projects from companies like Google, Netflix, Stripe, or Airbnb.\n`;\n// Deterministic simulation function for generating missions\nfunction generateMissionsFromResume(resumeText = '', interests = [], industry, difficulty = 'Intermediate', timeEstimate = '3-5 hours') {\n    // Create a deterministic seed based on input\n    const seed = hashString(resumeText + interests.join('') + (industry || '') + difficulty);\n    const rng = createSeededRandom(seed);\n    // Base mission templates that can be customized\n    const baseMissions = [\n        {\n            title: 'Full-Stack E-commerce Platform',\n            description: 'Build a complete e-commerce solution with user authentication, product catalog, shopping cart, and payment integration. Focus on scalable architecture and responsive design.',\n            baseSkills: [\n                'React',\n                'Node.js',\n                'PostgreSQL',\n                'Stripe API'\n            ],\n            baseIndustries: [\n                'E-commerce',\n                'Retail',\n                'Technology'\n            ]\n        },\n        {\n            title: 'Real-time Chat Application',\n            description: 'Create a scalable chat application with real-time messaging, user presence, file sharing, and message history. Implement WebSocket connections and optimize for performance.',\n            baseSkills: [\n                'WebSocket',\n                'React',\n                'Express',\n                'MongoDB'\n            ],\n            baseIndustries: [\n                'Technology',\n                'Communication',\n                'Social Media'\n            ]\n        },\n        {\n            title: 'Data Analytics Dashboard',\n            description: 'Develop an interactive dashboard that processes large datasets, generates insights, and provides real-time visualizations. Include data filtering, export capabilities, and responsive charts.',\n            baseSkills: [\n                'Python',\n                'Pandas',\n                'D3.js',\n                'FastAPI'\n            ],\n            baseIndustries: [\n                'Finance',\n                'Healthcare',\n                'Technology'\n            ]\n        },\n        {\n            title: 'AI-Powered Content Recommendation',\n            description: 'Build a machine learning system that analyzes user behavior and preferences to provide personalized content recommendations. Implement collaborative filtering and content-based algorithms.',\n            baseSkills: [\n                'Python',\n                'TensorFlow',\n                'Redis',\n                'FastAPI'\n            ],\n            baseIndustries: [\n                'Media',\n                'E-commerce',\n                'Technology'\n            ]\n        },\n        {\n            title: 'Microservices API Gateway',\n            description: 'Design and implement a robust API gateway that handles authentication, rate limiting, load balancing, and service discovery for a microservices architecture.',\n            baseSkills: [\n                'Docker',\n                'Kubernetes',\n                'Go',\n                'Redis'\n            ],\n            baseIndustries: [\n                'Technology',\n                'Finance',\n                'Healthcare'\n            ]\n        },\n        {\n            title: 'Mobile-First Progressive Web App',\n            description: 'Create a high-performance PWA with offline capabilities, push notifications, and native-like user experience. Focus on performance optimization and accessibility.',\n            baseSkills: [\n                'React',\n                'Service Workers',\n                'IndexedDB',\n                'Web APIs'\n            ],\n            baseIndustries: [\n                'Technology',\n                'Media',\n                'E-commerce'\n            ]\n        }\n    ];\n    // Select and customize missions based on interests and resume\n    const selectedMissions = baseMissions.sort(()=>rng() - 0.5) // Deterministic shuffle\n    .slice(0, 3 + Math.floor(rng() * 3)) // 3-5 missions\n    .map((mission, index)=>{\n        const customizedSkills = customizeSkills(mission.baseSkills, resumeText, interests, rng);\n        const customizedIndustries = customizeIndustries(mission.baseIndustries, industry, interests, rng);\n        const missionId = `generated-${Date.now()}-${index}`;\n        return {\n            id: missionId,\n            title: customizeTitle(mission.title, interests, rng),\n            description: mission.description,\n            skills: customizedSkills,\n            industries: customizedIndustries,\n            difficulty,\n            time_estimate: timeEstimate,\n            category: inferCategory(customizedSkills),\n            tags: customizedSkills.slice(0, 3),\n            timeLimit: `${3 + Math.floor(rng() * 5)} days`,\n            submissions: Math.floor(rng() * 200) + 50,\n            details: {\n                overview: `${mission.description} This comprehensive challenge will test your skills in ${customizedSkills.slice(0, 2).join(' and ')} while building real-world solutions.`,\n                requirements: generateRequirements(mission.title, customizedSkills, rng),\n                technologies: customizedSkills,\n                learningOutcomes: generateLearningOutcomes(customizedSkills, rng)\n            },\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        };\n    });\n    return selectedMissions;\n}\n// Helper functions for deterministic customization\nfunction hashString(str) {\n    let hash = 0;\n    for(let i = 0; i < str.length; i++){\n        const char = str.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash);\n}\nfunction createSeededRandom(seed) {\n    let state = seed;\n    return function() {\n        state = (state * 1664525 + 1013904223) % Math.pow(2, 32);\n        return state / Math.pow(2, 32);\n    };\n}\nfunction customizeSkills(baseSkills, resumeText, interests, rng) {\n    const additionalSkills = [\n        'TypeScript',\n        'GraphQL',\n        'AWS',\n        'Docker',\n        'Kubernetes',\n        'Redis',\n        'MongoDB',\n        'PostgreSQL',\n        'Jest',\n        'Cypress',\n        'Terraform',\n        'Jenkins',\n        'Git',\n        'Linux'\n    ];\n    // Add skills mentioned in resume or interests\n    const resumeSkills = extractSkillsFromText(resumeText);\n    const interestSkills = extractSkillsFromInterests(interests);\n    const customizedSkills = [\n        ...baseSkills\n    ];\n    // Add 2-3 additional relevant skills\n    const relevantSkills = [\n        ...resumeSkills,\n        ...interestSkills,\n        ...additionalSkills\n    ].filter((skill)=>!customizedSkills.includes(skill)).sort(()=>rng() - 0.5).slice(0, 2 + Math.floor(rng() * 2));\n    return [\n        ...customizedSkills,\n        ...relevantSkills\n    ].slice(0, 6);\n}\nfunction customizeIndustries(baseIndustries, industry, interests = [], rng) {\n    const allIndustries = [\n        'Technology',\n        'Finance',\n        'Healthcare',\n        'E-commerce',\n        'Media',\n        'Education',\n        'Gaming',\n        'Automotive'\n    ];\n    let customizedIndustries = [\n        ...baseIndustries\n    ];\n    if (industry && !customizedIndustries.includes(industry)) {\n        customizedIndustries.push(industry);\n    }\n    // Add one more relevant industry\n    const additionalIndustry = allIndustries.filter((ind)=>!customizedIndustries.includes(ind)).sort(()=>rng() - 0.5)[0];\n    if (additionalIndustry) {\n        customizedIndustries.push(additionalIndustry);\n    }\n    return customizedIndustries.slice(0, 3);\n}\nfunction customizeTitle(baseTitle, interests, rng) {\n    // Add slight variations based on interests\n    const variations = {\n        'Full-Stack E-commerce Platform': [\n            'Modern E-commerce Platform',\n            'Scalable Online Marketplace',\n            'E-commerce Solution'\n        ],\n        'Real-time Chat Application': [\n            'Live Messaging Platform',\n            'Team Communication App',\n            'Real-time Collaboration Tool'\n        ],\n        'Data Analytics Dashboard': [\n            'Business Intelligence Dashboard',\n            'Analytics Visualization Platform',\n            'Data Insights Dashboard'\n        ],\n        'AI-Powered Content Recommendation': [\n            'ML Recommendation Engine',\n            'Personalization System',\n            'Smart Content Platform'\n        ],\n        'Microservices API Gateway': [\n            'Distributed Systems Gateway',\n            'Service Mesh Architecture',\n            'Cloud-Native API Platform'\n        ],\n        'Mobile-First Progressive Web App': [\n            'Cross-Platform Web App',\n            'Responsive PWA',\n            'Mobile Web Application'\n        ]\n    };\n    const titleVariations = variations[baseTitle];\n    if (titleVariations && rng() > 0.5) {\n        return titleVariations[Math.floor(rng() * titleVariations.length)];\n    }\n    return baseTitle;\n}\nfunction extractSkillsFromText(text) {\n    const commonSkills = [\n        'JavaScript',\n        'TypeScript',\n        'Python',\n        'Java',\n        'React',\n        'Vue',\n        'Angular',\n        'Node.js',\n        'Express',\n        'Django',\n        'Flask',\n        'Spring',\n        'PostgreSQL',\n        'MySQL',\n        'MongoDB',\n        'Redis',\n        'AWS',\n        'Azure',\n        'GCP',\n        'Docker',\n        'Kubernetes'\n    ];\n    return commonSkills.filter((skill)=>text.toLowerCase().includes(skill.toLowerCase()));\n}\nfunction extractSkillsFromInterests(interests) {\n    const interestToSkills = {\n        'Frontend Development': [\n            'React',\n            'Vue',\n            'Angular',\n            'TypeScript'\n        ],\n        'Backend Development': [\n            'Node.js',\n            'Python',\n            'Java',\n            'PostgreSQL'\n        ],\n        'Full Stack Development': [\n            'React',\n            'Node.js',\n            'PostgreSQL',\n            'TypeScript'\n        ],\n        'Mobile Development': [\n            'React Native',\n            'Flutter',\n            'Swift',\n            'Kotlin'\n        ],\n        'Data Science': [\n            'Python',\n            'Pandas',\n            'NumPy',\n            'Jupyter'\n        ],\n        'Machine Learning': [\n            'Python',\n            'TensorFlow',\n            'PyTorch',\n            'Scikit-learn'\n        ],\n        'DevOps': [\n            'Docker',\n            'Kubernetes',\n            'AWS',\n            'Terraform'\n        ],\n        'Cloud Computing': [\n            'AWS',\n            'Azure',\n            'GCP',\n            'Docker'\n        ]\n    };\n    return interests.flatMap((interest)=>interestToSkills[interest] || []);\n}\nfunction inferCategory(skills) {\n    const categoryKeywords = {\n        'Frontend': [\n            'React',\n            'Vue',\n            'Angular',\n            'CSS',\n            'HTML'\n        ],\n        'Backend': [\n            'Node.js',\n            'Express',\n            'Django',\n            'Flask',\n            'Spring'\n        ],\n        'AI/ML': [\n            'TensorFlow',\n            'PyTorch',\n            'Machine Learning',\n            'AI'\n        ],\n        'DevOps': [\n            'Docker',\n            'Kubernetes',\n            'AWS',\n            'Terraform'\n        ],\n        'Data Science': [\n            'Pandas',\n            'NumPy',\n            'Jupyter',\n            'Analytics'\n        ],\n        'Mobile': [\n            'React Native',\n            'Flutter',\n            'Swift',\n            'Kotlin'\n        ]\n    };\n    for (const [category, keywords] of Object.entries(categoryKeywords)){\n        if (keywords.some((keyword)=>skills.some((skill)=>skill.includes(keyword)))) {\n            return category;\n        }\n    }\n    return 'Full Stack';\n}\nfunction generateRequirements(title, skills, rng) {\n    const baseRequirements = [\n        'Design and implement the core system architecture',\n        'Write comprehensive documentation',\n        'Include proper error handling and validation',\n        'Implement testing strategies',\n        'Optimize for performance and scalability'\n    ];\n    const skillSpecificRequirements = {\n        'React': [\n            'Create responsive user interfaces',\n            'Implement state management'\n        ],\n        'Node.js': [\n            'Build RESTful APIs',\n            'Handle asynchronous operations'\n        ],\n        'Python': [\n            'Write clean, pythonic code',\n            'Implement data processing logic'\n        ],\n        'Docker': [\n            'Containerize the application',\n            'Create multi-stage builds'\n        ],\n        'AWS': [\n            'Deploy to cloud infrastructure',\n            'Configure auto-scaling'\n        ],\n        'PostgreSQL': [\n            'Design efficient database schemas',\n            'Optimize query performance'\n        ],\n        'TypeScript': [\n            'Implement strict type checking',\n            'Create reusable type definitions'\n        ]\n    };\n    const requirements = [\n        ...baseRequirements\n    ];\n    // Add skill-specific requirements\n    skills.forEach((skill)=>{\n        const specificReqs = skillSpecificRequirements[skill];\n        if (specificReqs && rng() > 0.5) {\n            requirements.push(specificReqs[Math.floor(rng() * specificReqs.length)]);\n        }\n    });\n    return requirements.slice(0, 5).sort(()=>rng() - 0.5);\n}\nfunction generateLearningOutcomes(skills, rng) {\n    const baseOutcomes = [\n        'Best practices for software architecture',\n        'Code organization and maintainability',\n        'Testing and quality assurance',\n        'Performance optimization techniques'\n    ];\n    const skillSpecificOutcomes = {\n        'React': [\n            'Modern React patterns and hooks',\n            'Component composition strategies'\n        ],\n        'Node.js': [\n            'Asynchronous programming patterns',\n            'Server-side development'\n        ],\n        'Python': [\n            'Data manipulation and analysis',\n            'Object-oriented programming'\n        ],\n        'Docker': [\n            'Containerization strategies',\n            'DevOps fundamentals'\n        ],\n        'AWS': [\n            'Cloud architecture patterns',\n            'Scalable infrastructure design'\n        ],\n        'Machine Learning': [\n            'ML model development',\n            'Data preprocessing techniques'\n        ],\n        'TypeScript': [\n            'Type-safe development',\n            'Advanced TypeScript features'\n        ]\n    };\n    const outcomes = [\n        ...baseOutcomes\n    ];\n    // Add skill-specific outcomes\n    skills.forEach((skill)=>{\n        const specificOutcomes = skillSpecificOutcomes[skill];\n        if (specificOutcomes && rng() > 0.4) {\n            outcomes.push(specificOutcomes[Math.floor(rng() * specificOutcomes.length)]);\n        }\n    });\n    return outcomes.slice(0, 4).sort(()=>rng() - 0.5);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/ai.ts\n");

/***/ }),

/***/ "(api-node)/./lib/supabaseClient.ts":
/*!*******************************!*\
  !*** ./lib/supabaseClient.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   USE_DUMMY: () => (/* binding */ USE_DUMMY),\n/* harmony export */   addGeneratedMissions: () => (/* binding */ addGeneratedMissions),\n/* harmony export */   createUserMission: () => (/* binding */ createUserMission),\n/* harmony export */   getMissionById: () => (/* binding */ getMissionById),\n/* harmony export */   getMissions: () => (/* binding */ getMissions),\n/* harmony export */   insertProjectWithRelations: () => (/* binding */ insertProjectWithRelations),\n/* harmony export */   updateUserMissionStatus: () => (/* binding */ updateUserMissionStatus)\n/* harmony export */ });\n/* harmony import */ var _data_mockMissions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data/mockMissions */ \"(api-node)/./data/mockMissions.ts\");\n// lib/supabaseClient.ts\n\n// Toggle between dummy data and real Supabase\nconst USE_DUMMY = true;\n// TODO: Set these environment variables when switching to real Supabase:\n// NEXT_PUBLIC_SUPABASE_URL=your_supabase_url\n// NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key\n// or SUPABASE_SERVICE_ROLE_KEY=your_service_role_key for server-side operations\nlet supabase = null;\nif (!USE_DUMMY) {\n// Uncomment and configure when ready to use real Supabase:\n// import { createClient } from '@supabase/supabase-js';\n// const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\n// const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n// supabase = createClient(supabaseUrl, supabaseKey);\n}\nconst mockStore = _data_mockMissions__WEBPACK_IMPORTED_MODULE_0__.MockDataStore.getInstance();\n// Mission Templates\nasync function getMissions(status) {\n    if (USE_DUMMY) {\n        // Simulate network delay\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        if (status) {\n            // Filter by status if provided (for user missions)\n            const userMissions = mockStore.userMissions.filter((um)=>um.status === status);\n            const missionIds = userMissions.map((um)=>um.mission_id);\n            return mockStore.missionTemplates.filter((mt)=>missionIds.includes(mt.id));\n        }\n        return mockStore.missionTemplates;\n    }\n    // Real Supabase implementation\n    const query = supabase.from('mission_templates').select('*');\n    if (status) {\n        // Join with user_missions table to filter by status\n        query.eq('user_missions.status', status);\n    }\n    const { data, error } = await query;\n    if (error) throw error;\n    return data || [];\n}\nasync function getMissionById(id) {\n    if (USE_DUMMY) {\n        console.log('getMissionById: Using dummy data, searching for ID:', id);\n        console.log('getMissionById: Available missions:', mockStore.missionTemplates.map((m)=>m.id));\n        await new Promise((resolve)=>setTimeout(resolve, 50));\n        const mission = mockStore.missionTemplates.find((mt)=>mt.id === id) || null;\n        console.log('getMissionById: Found mission:', mission ? mission.title : 'Not found');\n        return mission;\n    }\n    const { data, error } = await supabase.from('mission_templates').select('*').eq('id', id).single();\n    if (error) throw error;\n    return data;\n}\n// User Missions\nasync function createUserMission(userId, missionId, status = 'suggested') {\n    if (USE_DUMMY) {\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        const newUserMission = {\n            id: `um-${Date.now()}`,\n            user_id: userId,\n            mission_id: missionId,\n            status,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            ...status === 'in_progress' && {\n                started_at: new Date().toISOString()\n            },\n            ...status === 'completed' && {\n                completed_at: new Date().toISOString()\n            }\n        };\n        mockStore.userMissions.push(newUserMission);\n        return newUserMission;\n    }\n    const { data, error } = await supabase.from('user_missions').insert({\n        user_id: userId,\n        mission_id: missionId,\n        status,\n        ...status === 'in_progress' && {\n            started_at: new Date().toISOString()\n        },\n        ...status === 'completed' && {\n            completed_at: new Date().toISOString()\n        }\n    }).select().single();\n    if (error) throw error;\n    return data;\n}\nasync function updateUserMissionStatus(userId, missionId, action) {\n    const statusMap = {\n        star: 'starred',\n        start: 'in_progress',\n        submit: 'submitted',\n        complete: 'completed'\n    };\n    const newStatus = statusMap[action];\n    if (USE_DUMMY) {\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        let userMission = mockStore.userMissions.find((um)=>um.user_id === userId && um.mission_id === missionId);\n        if (!userMission) {\n            // Create new user mission if it doesn't exist\n            userMission = await createUserMission(userId, missionId, newStatus);\n        } else {\n            // Update existing user mission\n            userMission.status = newStatus;\n            userMission.updated_at = new Date().toISOString();\n            if (action === 'start') {\n                userMission.started_at = new Date().toISOString();\n            } else if (action === 'submit') {\n                userMission.submitted_at = new Date().toISOString();\n            } else if (action === 'complete') {\n                userMission.completed_at = new Date().toISOString();\n            }\n        }\n        return userMission;\n    }\n    // Check if user mission exists\n    const { data: existing } = await supabase.from('user_missions').select('*').eq('user_id', userId).eq('mission_id', missionId).single();\n    if (!existing) {\n        // Create new user mission\n        return await createUserMission(userId, missionId, newStatus);\n    }\n    // Update existing user mission\n    const updateData = {\n        status: newStatus,\n        updated_at: new Date().toISOString()\n    };\n    if (action === 'start') {\n        updateData.started_at = new Date().toISOString();\n    } else if (action === 'submit') {\n        updateData.submitted_at = new Date().toISOString();\n    } else if (action === 'complete') {\n        updateData.completed_at = new Date().toISOString();\n    }\n    const { data, error } = await supabase.from('user_missions').update(updateData).eq('user_id', userId).eq('mission_id', missionId).select().single();\n    if (error) throw error;\n    return data;\n}\n// Projects\nasync function insertProjectWithRelations(project, docs, industryTagIds, targetRoleIds) {\n    if (USE_DUMMY) {\n        await new Promise((resolve)=>setTimeout(resolve, 150));\n        const newProject = {\n            ...project,\n            id: `proj-${Date.now()}`,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        };\n        mockStore.projects.push(newProject);\n        // Add project docs if provided\n        if (docs) {\n            docs.forEach((doc, index)=>{\n                const newDoc = {\n                    ...doc,\n                    id: `pd-${Date.now()}-${index}`,\n                    project_id: newProject.id,\n                    created_at: new Date().toISOString(),\n                    updated_at: new Date().toISOString()\n                };\n                mockStore.projectDocs.push(newDoc);\n            });\n        }\n        return newProject;\n    }\n    // Real Supabase implementation would use transactions\n    const { data: projectData, error: projectError } = await supabase.from('projects').insert(project).select().single();\n    if (projectError) throw projectError;\n    // Insert related data...\n    // (Implementation would continue with docs, tags, roles)\n    return projectData;\n}\n// Add new missions to the store (for AI generation)\nasync function addGeneratedMissions(missions) {\n    if (USE_DUMMY) {\n        await new Promise((resolve)=>setTimeout(resolve, 50));\n        mockStore.missionTemplates.push(...missions);\n        return;\n    }\n    const { error } = await supabase.from('mission_templates').insert(missions);\n    if (error) throw error;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/supabaseClient.ts\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate_missions&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cgenerate_missions.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate_missions&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cgenerate_missions.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_generate_missions_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\generate_missions.ts */ \"(api-node)/./pages/api/generate_missions.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_generate_missions_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_generate_missions_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/generate_missions\",\n        pathname: \"/api/generate_missions\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_generate_missions_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/generate_missions\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/generate_missions\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate_missions&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cgenerate_missions.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/generate_missions.ts":
/*!****************************************!*\
  !*** ./pages/api/generate_missions.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/ai */ \"(api-node)/./lib/ai.ts\");\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabaseClient */ \"(api-node)/./lib/supabaseClient.ts\");\n// pages/api/generate_missions.ts\n\n\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            success: false,\n            error: 'Method not allowed',\n            missions: []\n        });\n    }\n    try {\n        const { resumeText, resumeUrl, interests } = req.body;\n        // Validation: at least one of resumeText, resumeUrl, or interests is required\n        if (!resumeText && !resumeUrl && (!interests || interests.length === 0)) {\n            return res.status(400).json({\n                success: false,\n                error: 'At least one of resumeText, resumeUrl, or interests is required',\n                missions: []\n            });\n        }\n        // For now, we'll focus on resumeText and interests\n        // TODO: Implement resumeUrl parsing when file upload is added\n        let processedResumeText = resumeText || '';\n        if (resumeUrl && !resumeText) {\n            // TODO: Fetch and parse resume from URL\n            processedResumeText = 'Resume content from URL (parsing not implemented yet)';\n        }\n        // Generate missions using AI simulation\n        const generatedMissions = (0,_lib_ai__WEBPACK_IMPORTED_MODULE_0__.generateMissionsFromResume)(processedResumeText, interests || [], undefined, 'Intermediate', '3-5 hours' // default time estimate\n        );\n        // Store generated missions (in dummy mode, adds to in-memory store)\n        await (0,_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__.addGeneratedMissions)(generatedMissions);\n        res.status(200).json({\n            success: true,\n            missions: generatedMissions\n        });\n    } catch (error) {\n        console.error('Error generating missions:', error);\n        res.status(500).json({\n            success: false,\n            error: 'Failed to generate missions',\n            missions: []\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9nZW5lcmF0ZV9taXNzaW9ucy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxpQ0FBaUM7QUFFcUI7QUFDTTtBQUc3QyxlQUFlRSxRQUM1QkMsR0FBbUIsRUFDbkJDLEdBQThDO0lBRTlDLElBQUlELElBQUlFLE1BQU0sS0FBSyxRQUFRO1FBQ3pCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJDLFNBQVM7WUFDVEMsT0FBTztZQUNQQyxVQUFVLEVBQUU7UUFDZDtJQUNGO0lBRUEsSUFBSTtRQUNGLE1BQU0sRUFBRUMsVUFBVSxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRSxHQUE0QlYsSUFBSVcsSUFBSTtRQUU5RSw4RUFBOEU7UUFDOUUsSUFBSSxDQUFDSCxjQUFjLENBQUNDLGFBQWMsRUFBQ0MsYUFBYUEsVUFBVUUsTUFBTSxLQUFLLElBQUk7WUFDdkUsT0FBT1gsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDMUJDLFNBQVM7Z0JBQ1RDLE9BQU87Z0JBQ1BDLFVBQVUsRUFBRTtZQUNkO1FBQ0Y7UUFFQSxtREFBbUQ7UUFDbkQsOERBQThEO1FBQzlELElBQUlNLHNCQUFzQkwsY0FBYztRQUV4QyxJQUFJQyxhQUFhLENBQUNELFlBQVk7WUFDNUIsd0NBQXdDO1lBQ3hDSyxzQkFBc0I7UUFDeEI7UUFFQSx3Q0FBd0M7UUFDeEMsTUFBTUMsb0JBQW9CakIsbUVBQTBCQSxDQUNsRGdCLHFCQUNBSCxhQUFhLEVBQUUsRUFDZkssV0FDQSxnQkFDQSxZQUFZLHdCQUF3Qjs7UUFHdEMsb0VBQW9FO1FBQ3BFLE1BQU1qQix5RUFBb0JBLENBQUNnQjtRQUUzQmIsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUNuQkMsU0FBUztZQUNURSxVQUFVTztRQUNaO0lBQ0YsRUFBRSxPQUFPUixPQUFPO1FBQ2RVLFFBQVFWLEtBQUssQ0FBQyw4QkFBOEJBO1FBQzVDTCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsVUFBVSxFQUFFO1FBQ2Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1pcnNhXFxPbmVEcml2ZVxcRGVza3RvcFxcVmVscmljIFRhc2tzXFx2ZWxyaWNcXHBhZ2VzXFxhcGlcXGdlbmVyYXRlX21pc3Npb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhZ2VzL2FwaS9nZW5lcmF0ZV9taXNzaW9ucy50c1xyXG5pbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcbmltcG9ydCB7IGdlbmVyYXRlTWlzc2lvbnNGcm9tUmVzdW1lIH0gZnJvbSAnQC9saWIvYWknO1xyXG5pbXBvcnQgeyBhZGRHZW5lcmF0ZWRNaXNzaW9ucyB9IGZyb20gJ0AvbGliL3N1cGFiYXNlQ2xpZW50JztcclxuaW1wb3J0IHsgR2VuZXJhdGVNaXNzaW9uc1JlcXVlc3QsIEdlbmVyYXRlTWlzc2lvbnNSZXNwb25zZSB9IGZyb20gJ0AvdHlwZXMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihcclxuICByZXE6IE5leHRBcGlSZXF1ZXN0LFxyXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlPEdlbmVyYXRlTWlzc2lvbnNSZXNwb25zZT5cclxuKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHtcclxuICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgIGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyxcclxuICAgICAgbWlzc2lvbnM6IFtdXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHJlc3VtZVRleHQsIHJlc3VtZVVybCwgaW50ZXJlc3RzIH06IEdlbmVyYXRlTWlzc2lvbnNSZXF1ZXN0ID0gcmVxLmJvZHk7XHJcbiAgICBcclxuICAgIC8vIFZhbGlkYXRpb246IGF0IGxlYXN0IG9uZSBvZiByZXN1bWVUZXh0LCByZXN1bWVVcmwsIG9yIGludGVyZXN0cyBpcyByZXF1aXJlZFxyXG4gICAgaWYgKCFyZXN1bWVUZXh0ICYmICFyZXN1bWVVcmwgJiYgKCFpbnRlcmVzdHMgfHwgaW50ZXJlc3RzLmxlbmd0aCA9PT0gMCkpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogJ0F0IGxlYXN0IG9uZSBvZiByZXN1bWVUZXh0LCByZXN1bWVVcmwsIG9yIGludGVyZXN0cyBpcyByZXF1aXJlZCcsXHJcbiAgICAgICAgbWlzc2lvbnM6IFtdXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBGb3Igbm93LCB3ZSdsbCBmb2N1cyBvbiByZXN1bWVUZXh0IGFuZCBpbnRlcmVzdHNcclxuICAgIC8vIFRPRE86IEltcGxlbWVudCByZXN1bWVVcmwgcGFyc2luZyB3aGVuIGZpbGUgdXBsb2FkIGlzIGFkZGVkXHJcbiAgICBsZXQgcHJvY2Vzc2VkUmVzdW1lVGV4dCA9IHJlc3VtZVRleHQgfHwgJyc7XHJcbiAgICBcclxuICAgIGlmIChyZXN1bWVVcmwgJiYgIXJlc3VtZVRleHQpIHtcclxuICAgICAgLy8gVE9ETzogRmV0Y2ggYW5kIHBhcnNlIHJlc3VtZSBmcm9tIFVSTFxyXG4gICAgICBwcm9jZXNzZWRSZXN1bWVUZXh0ID0gJ1Jlc3VtZSBjb250ZW50IGZyb20gVVJMIChwYXJzaW5nIG5vdCBpbXBsZW1lbnRlZCB5ZXQpJztcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gR2VuZXJhdGUgbWlzc2lvbnMgdXNpbmcgQUkgc2ltdWxhdGlvblxyXG4gICAgY29uc3QgZ2VuZXJhdGVkTWlzc2lvbnMgPSBnZW5lcmF0ZU1pc3Npb25zRnJvbVJlc3VtZShcclxuICAgICAgcHJvY2Vzc2VkUmVzdW1lVGV4dCxcclxuICAgICAgaW50ZXJlc3RzIHx8IFtdLFxyXG4gICAgICB1bmRlZmluZWQsIC8vIGluZHVzdHJ5IC0gY291bGQgYmUgZXh0cmFjdGVkIGZyb20gcmVzdW1lL2ludGVyZXN0c1xyXG4gICAgICAnSW50ZXJtZWRpYXRlJywgLy8gZGVmYXVsdCBkaWZmaWN1bHR5XHJcbiAgICAgICczLTUgaG91cnMnIC8vIGRlZmF1bHQgdGltZSBlc3RpbWF0ZVxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgLy8gU3RvcmUgZ2VuZXJhdGVkIG1pc3Npb25zIChpbiBkdW1teSBtb2RlLCBhZGRzIHRvIGluLW1lbW9yeSBzdG9yZSlcclxuICAgIGF3YWl0IGFkZEdlbmVyYXRlZE1pc3Npb25zKGdlbmVyYXRlZE1pc3Npb25zKTtcclxuICAgIFxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBtaXNzaW9uczogZ2VuZXJhdGVkTWlzc2lvbnNcclxuICAgIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZW5lcmF0aW5nIG1pc3Npb25zOicsIGVycm9yKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgIGVycm9yOiAnRmFpbGVkIHRvIGdlbmVyYXRlIG1pc3Npb25zJyxcclxuICAgICAgbWlzc2lvbnM6IFtdXHJcbiAgICB9KTtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiZ2VuZXJhdGVNaXNzaW9uc0Zyb21SZXN1bWUiLCJhZGRHZW5lcmF0ZWRNaXNzaW9ucyIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwic3VjY2VzcyIsImVycm9yIiwibWlzc2lvbnMiLCJyZXN1bWVUZXh0IiwicmVzdW1lVXJsIiwiaW50ZXJlc3RzIiwiYm9keSIsImxlbmd0aCIsInByb2Nlc3NlZFJlc3VtZVRleHQiLCJnZW5lcmF0ZWRNaXNzaW9ucyIsInVuZGVmaW5lZCIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/generate_missions.ts\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate_missions&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cgenerate_missions.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();